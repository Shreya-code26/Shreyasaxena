Question-1:
package com.demo1;
import java.util.HashSet;

public class AppendToHashSet {
    public static void main(String[] args) {
        // Create a HashSet
        HashSet<String> set = new HashSet<>();

        // Add some initial elements
        set.add("Apple");
        set.add("Mango");
        set.add("Orange");

        System.out.println("HashSet before adding element: " + set);

        String newElement = "Banana";
        boolean isAdded = set.add(newElement);

        // Checking if the element is added successfully
        if (isAdded) {
            System.out.println("Element '" + newElement + "' added to the HashSet.");
        } else {
            System.out.println("Element '" + newElement + "' already exists in the HashSet.");
        }
        System.out.println("HashSet after adding element: " + set);
    }
}



Output:

HashSet before adding element: [Apple, Mango, Orange]
Element 'Banana' added to the HashSet.
HashSet after adding element: [Apple, Mango, Orange, Banana]

Question-2:
package com.demo1;
import java.util.Stack;

public class StackExample {
    public static void main(String[] args) {
        Stack<Integer> st = new Stack<>();
        for (int i = 1; i <= 10; i++) {
            st.push(i);
        }
        System.out.println("Stack elements: " + st);
        System.out.println("Removing 4 elements:");
        for (int i = 0; i < 4; i++) {
            if (!st.isEmpty()) {
                System.out.println("Popped: " + st.pop());
            }
        }

        // Display stack elements after removal
        System.out.println("Stack elements after removal: " + st);
    }
}


Output:

Stack elements: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
Removing 4 elements:
Popped: 10
Popped: 9
Popped: 8
Popped: 7
Stack elements after removal: [1, 2, 3, 4, 5, 6]